#!/bin/bash

# =============================================================================
# üõ°Ô∏è Script: Verificador de Grupo no Active Directory (Protocolo LDAP)
# =============================================================================
#
# üìò Descri√ß√£o:
#   Este script realiza a verifica√ß√£o da exist√™ncia de um grupo no Active Directory,
#   usando autentica√ß√£o via UPN (ex: usuario@dominio.com) e protocolo LDAP (porta 389).
#   Ele N√ÉO requer que o sistema esteja integrado ao dom√≠nio.
#
# üîß Requisitos:
#   - Sistema operacional: Debian ou Ubuntu
#   - Pacote: ldap-utils
#
# üì• O script:
#   - Solicita o nome do grupo (com valida√ß√£o de caracteres permitidos)
#   - Solicita uma conta de dom√≠nio (UPN) e senha com confirma√ß√£o
#   - Extrai automaticamente o base DN do sufixo da conta UPN
#   - Faz consulta segura usando ldapsearch via protocolo ldap://
#   - Exibe se o grupo foi encontrado ou n√£o
#   - Permite repetir o processo em loop
#
# üìå Exemplo de uso:
#   chmod +x verifica_grupo_ad_ldap.sh
#   ./verifica_grupo_ad_ldap.sh
#
# üîí Observa√ß√µes:
#   - N√£o armazena senhas
#   - N√£o grava logs
#   - Apenas grupos com caracteres v√°lidos ser√£o aceitos:
#     Letras, n√∫meros, h√≠fen (-), underscore (_), ponto (.)
#
# üß† Autor: Linux Server Expert (GPT)
# ============================================================================

clear
echo "============================================"
echo "  Verificador de Grupos no Active Directory "
echo "  (via protocolo LDAP - porta 389)          "
echo "============================================"
echo
echo "Este script verifica se um grupo existe no AD."
echo "Ser√° necess√°rio fornecer uma conta UPN e senha."
echo

# Verifica e instala ldap-utils se necess√°rio
if ! command -v ldapsearch &> /dev/null; then
    echo "Ferramenta 'ldap-utils' n√£o encontrada."
    read -p "Deseja instalar agora? (s/n): " instalar
    if [[ "$instalar" =~ ^[sS]$ ]]; then
        sudo apt update && sudo apt install -y ldap-utils
    else
        echo "Instala√ß√£o cancelada. Encerrando."
        exit 1
    fi
fi

while true; do
    read -erp "Informe o nome do grupo: " grupo_raw
    grupo=$(echo "$grupo_raw" | tr -cd 'a-zA-Z0-9._-')
    if [[ -z "$grupo" ]]; then
        echo " Nome de grupo inv√°lido. Apenas letras, n√∫meros, '.', '-', '_' s√£o permitidos."
        continue
    fi

    read -erp "Informe a conta UPN (ex: usuario@dominio.com): " upn
    if [[ ! "$upn" =~ ^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ ]]; then
        echo " UPN inv√°lido."
        continue
    fi

    echo -n "Digite a senha: "
    read -s senha1
    echo
    echo -n "Confirme a senha: "
    read -s senha2
    echo
    if [[ "$senha1" != "$senha2" ]]; then
        echo " Senhas n√£o conferem."
        continue
    fi

    dominio="${upn#*@}"
    base_dn=$(echo "$dominio" | awk -F. '{for (i=1;i<=NF;i++) printf "dc=%s%s", $i, (i==NF?"":",")}')
    ldap_host="ldap://$dominio"

    echo
    echo " Buscando grupo '$grupo' em $dominio (via LDAP)..."
    sleep 2
    resultado=$(ldapsearch -LLL -x -H "$ldap_host" \
        -D "$upn" -w "$senha1" \
        -b "$base_dn" "(&(objectClass=group)(sAMAccountName=$grupo))" sAMAccountName 2>/dev/null)

    if echo "$resultado" | grep -q "^sAMAccountName: "; then
        echo "‚úÖ Grupo encontrado: $grupo"
    else
        echo " Grupo n√£o encontrado."
    fi

    echo
    read -p "Deseja verificar outro grupo? (s/n): " repetir
    if [[ ! "$repetir" =~ ^[sS]$ ]]; then
        echo "Encerrando o script. At√© logo!"
        break
    fi
    echo "--------------------------------------------"
done
